{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst POPULATE_ORDERS = 'orders/POPULATE_ORDERS';\nconst DETAIL_ORDER = 'orders/DETAIL_ORDER';\nconst CREATE_ORDER = 'orders/CREATE_ORDER';\nconst EDIT_ORDER = 'orders/EDIT_ORDER';\nconst populateOrders = orders => {\n  return {\n    type: POPULATE_ORDERS,\n    payload: orders\n  };\n};\nconst detailOrder = order => {\n  return {\n    type: DETAIL_ORDER,\n    payload: order\n  };\n};\nconst createOrder = order => {\n  return {\n    type: CREATE_ORDER,\n    payload: order\n  };\n};\nconst editOrder = order => {\n  return {\n    type: EDIT_ORDER,\n    payload: order\n  };\n};\nexport const loadOrders = () => async dispatch => {\n  const response = await csrfFetch('/api/orders');\n  const data = await response.json();\n  dispatch(populateOrders(data));\n  return response;\n};\nexport const showDetailOrder = orderId => async dispatch => {\n  const response = await csrfFetch(`/api/orders/${orderId}`);\n  const data = await response.json();\n  dispatch(detailOrder(data));\n  return response;\n};\nexport const createNewOrder = order => async dispatch => {\n  const response = await csrfFetch('/api/orders', {\n    method: \"POST\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(createOrder(data));\n  return response;\n};\nexport const modifyOrder = order => async dispatch => {\n  const response = await csrfFetch(`/api/orders/${order.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(editOrder(data));\n  return response;\n};\nexport const addItems = (orderId, items) => async dispatch => {\n  const response = await csrfFetch(`/api/orders/${orderId}/items`, {\n    method: \"POST\",\n    body: JSON.stringify(items)\n  });\n  const data = await response.json();\n  return data;\n};\nconst ordersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState;\n  switch (action.type) {\n    case POPULATE_ORDERS:\n      {\n        newState = {\n          ...state\n        };\n        newState = action.payload;\n        return newState;\n      }\n    case DETAIL_ORDER:\n      {\n        newState = {\n          ...state\n        };\n        newState.detailOrder = action.payload;\n        return newState;\n      }\n    case CREATE_ORDER:\n      {\n        newState = {\n          ...state\n        };\n        newState.Orders = [...newState.Orders, action.payload];\n        return newState;\n      }\n    case EDIT_ORDER:\n      {\n        newState = {\n          ...state\n        };\n        newState.Orders = newState.Orders.map(order => order.id == action.payload.id ? action.payload : order);\n        newState.detailOrder.Order = action.payload;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default ordersReducer;","map":{"version":3,"names":["csrfFetch","POPULATE_ORDERS","DETAIL_ORDER","CREATE_ORDER","EDIT_ORDER","populateOrders","orders","type","payload","detailOrder","order","createOrder","editOrder","loadOrders","dispatch","response","data","json","showDetailOrder","orderId","createNewOrder","method","body","JSON","stringify","modifyOrder","id","addItems","items","ordersReducer","state","arguments","length","undefined","action","newState","Orders","map","Order"],"sources":["/home/jtheisen/projects/Reebelo-Case-Study/frontend/src/store/orders.js"],"sourcesContent":["import { csrfFetch } from './csrf';\n\nconst POPULATE_ORDERS = 'orders/POPULATE_ORDERS';\nconst DETAIL_ORDER = 'orders/DETAIL_ORDER';\nconst CREATE_ORDER = 'orders/CREATE_ORDER';\nconst EDIT_ORDER = 'orders/EDIT_ORDER';\n\nconst populateOrders = (orders) => {\n  return {\n    type: POPULATE_ORDERS,\n    payload: orders\n  }\n}\n\nconst detailOrder = (order) => {\n  return {\n    type: DETAIL_ORDER,\n    payload: order\n  }\n}\n\nconst createOrder = (order) => {\n  return {\n    type: CREATE_ORDER,\n    payload: order\n  }\n}\n\nconst editOrder = (order) => {\n  return {\n    type: EDIT_ORDER,\n    payload: order\n  }\n}\n\nexport const loadOrders = () => async (dispatch) => {\n  const response = await csrfFetch('/api/orders');\n  const data = await response.json();\n  dispatch(populateOrders(data));\n  return response;\n}\n\nexport const showDetailOrder = (orderId) => async (dispatch) => {\n  const response = await csrfFetch(`/api/orders/${orderId}`);\n  const data = await response.json();\n  dispatch(detailOrder(data));\n  return response;\n}\n\nexport const createNewOrder = (order) => async (dispatch) => {\n  const response = await csrfFetch('/api/orders', {\n    method: \"POST\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(createOrder(data));\n  return response;\n}\n\nexport const modifyOrder = (order) => async (dispatch) => {\n  const response = await csrfFetch(`/api/orders/${order.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(editOrder(data));\n  return response;\n}\n\nexport const addItems = (orderId, items) => async (dispatch) => {\n  const response = await csrfFetch(`/api/orders/${orderId}/items`, {\n    method: \"POST\",\n    body: JSON.stringify(items)\n  });\n  const data = await response.json();\n  return data;\n}\n\nconst ordersReducer = ( state = {}, action) => {\n  let newState;\n  switch (action.type) {\n    case POPULATE_ORDERS: {\n      newState = {...state};\n      newState = action.payload;\n      return newState;\n    }\n    case DETAIL_ORDER: {\n      newState = {...state};\n      newState.detailOrder = action.payload;\n      return newState;\n    }\n    case CREATE_ORDER: {\n      newState = {...state};\n      newState.Orders = [...newState.Orders, action.payload];\n      return newState;\n    }\n    case EDIT_ORDER: {\n      newState = {...state};\n      newState.Orders = newState.Orders.map(order => order.id == action.payload.id ? action.payload : order)\n      newState.detailOrder.Order = action.payload;\n      return newState;\n    }\n    default:\n      return state\n  }\n}\n\nexport default ordersReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}