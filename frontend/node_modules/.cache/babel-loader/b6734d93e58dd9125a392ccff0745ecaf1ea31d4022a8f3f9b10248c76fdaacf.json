{"ast":null,"code":"var _jsxFileName = \"/home/jtheisen/projects/Reebelo-Case-Study/frontend/src/components/ProductsPage/index.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadProducts, nextPageProducts } from \"../../store/products\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProductsPage() {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const products = useSelector(state => state.products);\n  const currPage = useSelector(state => state.products.page);\n  const [list, setList] = useState([]);\n  const [changingProduct, setChanginProduct] = use;\n  let localList = localStorage.getItem(\"list\");\n  useEffect(() => {\n    dispatch(loadProducts());\n    localList = JSON.parse(localList);\n    if (localList) setList(localList);\n  }, []);\n  if (!products.Products) return null;\n  const addToList = product => {\n    let listCopy = [...list];\n    let {\n      id\n    } = product;\n    let existingProduct = listCopy.find(element => element.id == id);\n\n    // if id in list\n    if (existingProduct) {\n      existingProduct.quantity++;\n    } else {\n      product.quantity = 1;\n      listCopy.push(product);\n    }\n    setList(listCopy);\n    let stringList = JSON.stringify(listCopy);\n    localStorage.setItem(\"list\", stringList);\n  };\n  const editProduct = (productID, amount) => {\n    let listCopy = [...list];\n\n    //find if item exists, just in case\n    let existentProduct = listCopy.find(element => element.id == productID);\n\n    //if it doesnt exist simply return\n    if (!existentProduct) return;\n\n    //continue and update quantity\n    existentProduct.quantity = amount;\n\n    //validate result\n    if (existentProduct.quantity <= 0) {\n      //remove item  by filtering it from cart array\n      listCopy = listCopy.filter(element => element.id != productID);\n    }\n\n    //again, update state and localState\n    setList(listCopy);\n    let listString = JSON.stringify(listCopy);\n    localStorage.setItem('list', listString);\n  };\n  const removeFromList = productId => {\n    let listCopy = [...list];\n    listCopy = listCopy.filter(product => product.id != productId);\n    setList(listCopy);\n    let stringList = JSON.stringify(listCopy);\n    localStorage.setItem(\"list\", stringList);\n  };\n  console.log(list);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productsPageContent\",\n      children: [list.map(product => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"id:\", product.id, \" quantity:\", product.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: product.quantity,\n            onChange: e => editProduct(product.id, product.quantity)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFromList(product.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }), products && products.Products.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"productBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.stock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToList(product),\n            children: \"Add To List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(nextPageProducts(currPage + 1)),\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ProductsPage, \"DLV/IFigFMyqM76OVxjUXRLE5LE=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n_c = ProductsPage;\nexport default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["useDispatch","useSelector","loadProducts","nextPageProducts","useEffect","useState","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductsPage","_s","dispatch","history","products","state","currPage","page","list","setList","changingProduct","setChanginProduct","use","localList","localStorage","getItem","JSON","parse","Products","addToList","product","listCopy","id","existingProduct","find","element","quantity","push","stringList","stringify","setItem","editProduct","productID","amount","existentProduct","filter","listString","removeFromList","productId","console","log","children","className","map","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","onClick","name","stock","_c","$RefreshReg$"],"sources":["/home/jtheisen/projects/Reebelo-Case-Study/frontend/src/components/ProductsPage/index.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\n\nimport { loadProducts, nextPageProducts } from \"../../store/products\";\nimport { useEffect, useState } from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nfunction ProductsPage() {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const products = useSelector(state => state.products)\n  const currPage = useSelector(state => state.products.page);\n  const [list, setList] = useState([]);\n  const [changingProduct, setChanginProduct] = use\n\n  let localList = localStorage.getItem(\"list\");\n\n  useEffect(() => {\n\n    dispatch(loadProducts())\n\n    localList = JSON.parse(localList);\n\n    if (localList) setList(localList);\n\n  }, []);\n\n  if (!products.Products) return null;\n\n  const addToList = (product) => {\n    let listCopy = [...list];\n    let {id} = product;\n    let existingProduct = listCopy.find(element => element.id == id)\n\n    // if id in list\n    if (existingProduct) {\n      existingProduct.quantity++;\n    } else {\n      product.quantity = 1;\n      listCopy.push(product)\n    }\n\n    setList(listCopy)\n\n    let stringList = JSON.stringify(listCopy);\n    localStorage.setItem(\"list\", stringList);\n  }\n\n  const editProduct = (productID, amount) => {\n\n    let listCopy = [...list]\n\n    //find if item exists, just in case\n    let existentProduct = listCopy.find(element => element.id == productID);\n\n    //if it doesnt exist simply return\n    if (!existentProduct) return\n\n    //continue and update quantity\n    existentProduct.quantity = amount;\n\n    //validate result\n    if (existentProduct.quantity <= 0) {\n      //remove item  by filtering it from cart array\n      listCopy = listCopy.filter(element => element.id != productID)\n    }\n\n    //again, update state and localState\n    setList(listCopy);\n\n    let listString = JSON.stringify(listCopy);\n    localStorage.setItem('list', listString);\n  }\n\n  const removeFromList = (productId) => {\n    let listCopy = [...list];\n\n    listCopy = listCopy.filter(product => product.id != productId);\n\n    setList(listCopy)\n\n    let stringList = JSON.stringify(listCopy);\n    localStorage.setItem(\"list\", stringList);\n  }\n\n  console.log(list)\n  return (\n    <>\n    <div className=\"productsPageContent\">\n      {list.map(product => {\n        return (\n          <>\n            <p>id:{product.id} quantity:{product.quantity}</p>\n            <input\n            type='number'\n            value={product.quantity}\n            onChange={(e) => editProduct(product.id, product.quantity)}\n            />\n            <button onClick={() => removeFromList(product.id)}>Remove</button>\n          </>\n        );\n      })}\n      {products &&\n        products.Products.map(product => {\n\n          return (\n            <div className=\"productBox\">\n              <p>{product.name}</p>\n              <p>{product.stock}</p>\n              <button onClick={() => addToList(product)}>Add To List</button>\n            </div>\n          )\n        })\n      }\n    </div>\n    <button onClick={() => dispatch(nextPageProducts(currPage + 1))}>Load More</button>\n    </>\n  )\n}\n\nexport default ProductsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}