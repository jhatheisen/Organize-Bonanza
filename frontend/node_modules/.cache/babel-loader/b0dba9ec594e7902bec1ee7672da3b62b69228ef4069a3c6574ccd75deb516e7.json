{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst POPULATE_ORDERS = 'orders/POPULATE_ORDERS';\nconst DETAIL_ORDER = 'orders/DETAIL_ORDER';\nconst CREATE_ORDER = 'orders/CREATE_ORDER';\nconst EDIT_ORDER = 'orders/EDIT_ORDER';\nconst populateOrders = orders => {\n  return {\n    type: POPULATE_ORDERS,\n    payload: orders\n  };\n};\nconst detailOrder = order => {\n  return {\n    type: DETAIL_ORDER,\n    payload: order\n  };\n};\nconst createOrder = order => {\n  return {\n    type: CREATE_ORDER,\n    payload: order\n  };\n};\nconst editOrder = order => {\n  return {\n    type: EDIT_ORDER,\n    payload: order\n  };\n};\nexport const loadOrders = () => async dispatch => {\n  const response = await csrfFetch('/api/orders/bad');\n  console.log(response.json());\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(populateOrders(data));\n    return null;\n  } else if (response.status <= 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const showDetailOrder = orderId => async dispatch => {\n  const response = await csrfFetch(`/api/orders/${orderId}`);\n  const data = await response.json();\n  dispatch(detailOrder(data));\n  return response;\n};\nexport const createNewOrder = order => async dispatch => {\n  const response = await csrfFetch('/api/orders', {\n    method: \"POST\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(createOrder(data));\n  return response;\n};\nexport const modifyOrder = order => async dispatch => {\n  const response = await csrfFetch(`/api/orders/${order.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(editOrder(data));\n  return response;\n};\nexport const addItems = (orderId, items) => async dispatch => {\n  const response = await csrfFetch(`/api/orders/${orderId}/items`, {\n    method: \"POST\",\n    body: JSON.stringify(items)\n  });\n  return response;\n};\nconst ordersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState;\n  switch (action.type) {\n    case POPULATE_ORDERS:\n      {\n        newState = {\n          ...state\n        };\n        newState = action.payload;\n        return newState;\n      }\n    case DETAIL_ORDER:\n      {\n        newState = {\n          ...state\n        };\n        newState.detailOrder = action.payload;\n        return newState;\n      }\n    case CREATE_ORDER:\n      {\n        newState = {\n          ...state\n        };\n        newState.Orders = [...newState.Orders, action.payload];\n        return newState;\n      }\n    case EDIT_ORDER:\n      {\n        newState = {\n          ...state\n        };\n        // newState.Orders = newState.Orders.map(order => order.id == action.payload.id ? action.payload : order)\n        newState.detailOrder.Order = action.payload;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default ordersReducer;","map":{"version":3,"names":["csrfFetch","POPULATE_ORDERS","DETAIL_ORDER","CREATE_ORDER","EDIT_ORDER","populateOrders","orders","type","payload","detailOrder","order","createOrder","editOrder","loadOrders","dispatch","response","console","log","json","ok","data","status","errors","showDetailOrder","orderId","createNewOrder","method","body","JSON","stringify","modifyOrder","id","addItems","items","ordersReducer","state","arguments","length","undefined","action","newState","Orders","Order"],"sources":["/home/jtheisen/projects/Reebelo-Case-Study/frontend/src/store/orders.js"],"sourcesContent":["import { csrfFetch } from './csrf';\n\nconst POPULATE_ORDERS = 'orders/POPULATE_ORDERS';\nconst DETAIL_ORDER = 'orders/DETAIL_ORDER';\nconst CREATE_ORDER = 'orders/CREATE_ORDER';\nconst EDIT_ORDER = 'orders/EDIT_ORDER';\n\nconst populateOrders = (orders) => {\n  return {\n    type: POPULATE_ORDERS,\n    payload: orders\n  }\n}\n\nconst detailOrder = (order) => {\n  return {\n    type: DETAIL_ORDER,\n    payload: order\n  }\n}\n\nconst createOrder = (order) => {\n  return {\n    type: CREATE_ORDER,\n    payload: order\n  }\n}\n\nconst editOrder = (order) => {\n  return {\n    type: EDIT_ORDER,\n    payload: order\n  }\n}\n\nexport const loadOrders = () => async (dispatch) => {\n  const response = await csrfFetch('/api/orders/bad');\n  console.log(response.json());\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(populateOrders(data));\n    return null;\n  } else if (response.status <= 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n}\n\nexport const showDetailOrder = (orderId) => async (dispatch) => {\n  const response = await csrfFetch(`/api/orders/${orderId}`);\n  const data = await response.json();\n  dispatch(detailOrder(data));\n  return response;\n}\n\nexport const createNewOrder = (order) => async (dispatch) => {\n  const response = await csrfFetch('/api/orders', {\n    method: \"POST\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(createOrder(data));\n  return response;\n}\n\nexport const modifyOrder = (order) => async (dispatch) => {\n  const response = await csrfFetch(`/api/orders/${order.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(order)\n  });\n  const data = await response.json();\n  dispatch(editOrder(data));\n  return response;\n}\n\nexport const addItems = (orderId, items) => async (dispatch) => {\n  const response = await csrfFetch(`/api/orders/${orderId}/items`, {\n    method: \"POST\",\n    body: JSON.stringify(items)\n  });\n  return response;\n}\n\nconst ordersReducer = ( state = {}, action) => {\n  let newState;\n  switch (action.type) {\n    case POPULATE_ORDERS: {\n      newState = {...state};\n      newState = action.payload;\n      return newState;\n    }\n    case DETAIL_ORDER: {\n      newState = {...state};\n      newState.detailOrder = action.payload;\n      return newState;\n    }\n    case CREATE_ORDER: {\n      newState = {...state};\n      newState.Orders = [...newState.Orders, action.payload];\n      return newState;\n    }\n    case EDIT_ORDER: {\n      newState = {...state};\n      // newState.Orders = newState.Orders.map(order => order.id == action.payload.id ? action.payload : order)\n      newState.detailOrder.Order = action.payload;\n      return newState;\n    }\n    default:\n      return state\n  }\n}\n\nexport default ordersReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}