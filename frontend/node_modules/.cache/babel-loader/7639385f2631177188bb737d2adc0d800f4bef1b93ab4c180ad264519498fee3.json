{"ast":null,"code":"var _jsxFileName = \"/home/jtheisen/projects/Reebelo-Case-Study/frontend/src/components/SelectEmptyOrder/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { addItems } from \"../../store/orders\";\nimport { loadOrders } from \"../../store/orders\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectEmptyOrder(_ref) {\n  _s();\n  let {\n    list\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    closeModal\n  } = useModal();\n  const history = useHistory();\n  const orders = useSelector(state => state.orders);\n  let emptyOrders = [];\n  useEffect(() => {\n    dispatch(loadOrders());\n  }, []);\n  if (orders.Orders) {\n    console.log(orders.Orders[0].Products.length);\n    emptyOrders = orders.Orders.filter(order => order.Products.length == 0);\n  }\n  const addItemsToOrder = async orderId => {\n    if (window.confirm(\"Are you sure you want to add your current items to this order? This will CLEAR your list!\")) {\n      // add items\n      let res = await dispatch(addItems(orderId, list));\n      console.log(res);\n      if (res.ok) {\n        history.push(`/orders/${orderId}`);\n        localStorage.removeItem('list');\n        return closeModal();\n      } else {\n        window.alert(res.errors);\n      }\n    }\n  };\n  if (!orders.Orders) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select an order to add items to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), emptyOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => addItemsToOrder(order.id),\n      style: {\n        border: '1px solid black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order: \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tracking Num: \", order.trackingNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: order.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), emptyOrders.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No empty orders. Create a new order to add items.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectEmptyOrder, \"FZ9EVnAHNLbXf9nnTPqR628yJrs=\", false, function () {\n  return [useDispatch, useModal, useHistory, useSelector];\n});\n_c = SelectEmptyOrder;\nexport default SelectEmptyOrder;\nvar _c;\n$RefreshReg$(_c, \"SelectEmptyOrder\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useModal","addItems","loadOrders","useHistory","jsxDEV","_jsxDEV","SelectEmptyOrder","_ref","_s","list","dispatch","closeModal","history","orders","state","emptyOrders","Orders","console","log","Products","length","filter","order","addItemsToOrder","orderId","window","confirm","res","ok","push","localStorage","removeItem","alert","errors","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","style","border","trackingNumber","status","_c","$RefreshReg$"],"sources":["/home/jtheisen/projects/Reebelo-Case-Study/frontend/src/components/SelectEmptyOrder/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { addItems } from \"../../store/orders\";\nimport { loadOrders } from \"../../store/orders\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\n\nfunction SelectEmptyOrder({list}) {\n  const dispatch = useDispatch();\n  const { closeModal } = useModal();\n  const history = useHistory();\n\n  const orders = useSelector(state => state.orders);\n  let emptyOrders = [];\n\n  useEffect(() => {\n    dispatch(loadOrders());\n  },[])\n\n  if (orders.Orders) {\n    console.log(orders.Orders[0].Products.length)\n    emptyOrders = orders.Orders.filter(order => order.Products.length == 0)\n  }\n\n  const addItemsToOrder = async (orderId) => {\n    if (window.confirm(\"Are you sure you want to add your current items to this order? This will CLEAR your list!\")) {\n      // add items\n      let res = await dispatch(addItems(orderId, list))\n      console.log(res);\n      if (res.ok) {\n        history.push(`/orders/${orderId}`)\n        localStorage.removeItem('list')\n        return closeModal();\n      } else {\n        window.alert(res.errors)\n      }\n    }\n  }\n\n  if (!orders.Orders) return null;\n\n  return (\n    <div>\n      <h1>Select an order to add items to</h1>\n      {emptyOrders.map(order =>\n        <div onClick={() => addItemsToOrder(order.id)} style={{border: '1px solid black'}}>\n          <p>Order: {order.id}</p>\n          <p>Tracking Num: {order.trackingNumber}</p>\n          <p>{order.status}</p>\n        </div>\n      )}\n      {emptyOrders.length == 0 &&\n        <p>No empty orders. Create a new order to add items.</p>\n      }\n    </div>\n  )\n}\n\nexport default SelectEmptyOrder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}